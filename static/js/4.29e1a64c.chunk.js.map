{"version":3,"sources":["mod/app/App.js","common/util/request.js"],"names":["IconText","type","text","style","marginRight","App","id","limit","useState","list","setList","offset","setOffset","before","setBefore","loading","setLoading","hasMore","setHasMore","useEffect","a","url","data","axios","post","then","res","console","log","pre","hotComments","fetchData","pageStart","initialLoad","loadMore","length","time","itemLayout","size","dataSource","renderItem","item","Item","key","commentId","actions","startCount","likedCount","extra","width","alt","src","user","avatarUrl","Meta","avatar","title","nickname","description","content"],"mappings":"kSA6EA,SAASA,EAAT,GAAmC,IAAfC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KACxB,OACE,8BACE,uBAAMD,KAAMA,EAAME,MAAO,CAAEC,YAAa,KACvCF,GAKQG,UA9Ef,YAAuD,IAAD,IAAvCC,UAAuC,MAAlC,SAAkC,MAAxBL,YAAwB,MAAjB,EAAiB,MAAdM,aAAc,MAAN,GAAM,IAC5BC,mBAAS,IADmB,mBAC7CC,EAD6C,KACvCC,EADuC,OAExBF,mBAAS,GAFe,mBAE7CG,EAF6C,KAErCC,EAFqC,OAGxBJ,mBAAS,MAHe,mBAG7CK,EAH6C,KAGrCC,EAHqC,OAItBN,oBAAS,GAJa,mBAI7CO,EAJ6C,KAIpCC,EAJoC,OAKtBR,oBAAS,GALa,mBAK7CS,EAL6C,KAKpCC,EALoC,KA6BpD,OAtBAC,qBAAU,YACO,uCAAG,4BAAAC,EAAA,6DAChBJ,GAAW,GADK,SCMDK,EDJM,eCIDC,EDJiB,CACnChB,GAAIA,EACJK,OAAQA,EACRE,OAAQA,EACRN,MAAOA,EACPN,KAAMA,GCALsB,IACJC,KAAKH,EAAKC,GACVG,MAAK,SAAAC,GAAG,OAAIA,EAAIJ,QAChBG,MAAK,SAAAH,GAEJ,OADAK,QAAQC,IAAIN,GACLA,KDZS,OAEZI,EAFY,OAShBR,EAAWQ,EAAIT,SACfP,GAAQ,SAAAmB,GAAG,4BAAQA,GAAR,YAAgBH,EAAII,iBAC/Bd,GAAW,GAXK,iCCMf,IAAcK,EAAKC,IDNJ,OAAH,qDAafS,KACC,CAACzB,EAAIK,EAAQJ,EAAON,EAAMY,IAQ3B,kBAAC,IAAD,CACEmB,UAAW,EACXC,aAAa,EACbC,SATa,WACftB,EAAUH,EAAK0B,QACfrB,EAAUL,EAAKA,EAAK0B,OAAS,GAAGC,OAQ9BnB,SAAUF,GAAWE,GAErB,uBACEoB,WAAW,WACXC,KAAK,QACLC,WAAY9B,EACZM,QAASA,EACTyB,WAAY,SAAAC,GAAI,OACd,sBAAMC,KAAN,CACEC,IAAKF,EAAKG,UACVC,QAAS,CACP,kBAAC7C,EAAD,CAAUC,KAAK,SAASC,KAAMuC,EAAKK,aACnC,kBAAC9C,EAAD,CAAUC,KAAK,SAASC,KAAMuC,EAAKM,cAErCC,MAAO,yBAAKC,MAAO,IAAKC,IAAI,OAAOC,IAAKV,EAAKW,KAAKC,aAGlD,sBAAMX,KAAKY,KAAX,CACEC,OAAQ,uBAAQJ,IAAKV,EAAKW,KAAKC,YAC/BG,MAAOf,EAAKW,KAAKK,SACjBC,YAAajB,EAAKkB,UAEnBlB,EAAKkB","file":"static/js/4.29e1a64c.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { List, Icon, Avatar } from 'antd';\nimport { post } from '../../common/util/request';\n\nimport InfiniteScroll from 'react-infinite-scroller';\nimport './App.css';\n// import './mock';\n\nfunction App({ id = 33337113, type = 0, limit = 10 }) {\n  const [list, setList] = useState([]);\n  const [offset, setOffset] = useState(0);\n  const [before, setBefore] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [hasMore, setHasMore] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      let res = await post('/comment/hot', {\n        id: id,\n        offset: offset,\n        before: before,\n        limit: limit,\n        type: type\n      });\n      setHasMore(res.hasMore);\n      setList(pre => [...pre, ...res.hotComments]);\n      setLoading(false);\n    };\n    fetchData();\n  }, [id, offset, limit, type, before]);\n\n  const loadMore = () => {\n    setOffset(list.length);\n    setBefore(list[list.length - 1].time);\n  };\n\n  return (\n    <InfiniteScroll\n      pageStart={0}\n      initialLoad={false}\n      loadMore={loadMore}\n      hasMore={!loading && hasMore}\n    >\n      <List\n        itemLayout=\"vertical\"\n        size=\"large\"\n        dataSource={list}\n        loading={loading} // 注释掉显示骨架屏\n        renderItem={item => (\n          <List.Item\n            key={item.commentId}\n            actions={[\n              <IconText type=\"star-o\" text={item.startCount} />,\n              <IconText type=\"like-o\" text={item.likedCount} />\n            ]}\n            extra={<img width={272} alt=\"logo\" src={item.user.avatarUrl} />}\n          >\n            {/* <Skeleton loading={loading} active avatar> */}\n            <List.Item.Meta\n              avatar={<Avatar src={item.user.avatarUrl} />}\n              title={item.user.nickname}\n              description={item.content}\n            />\n            {item.content}\n            {/* </Skeleton> */}\n          </List.Item>\n        )}\n      />\n    </InfiniteScroll>\n  );\n}\n\n/**\n * 图标与文本\n * @param {*} param0\n */\nfunction IconText({ type, text }) {\n  return (\n    <span>\n      <Icon type={type} style={{ marginRight: 8 }} />\n      {text}\n    </span>\n  );\n}\n\nexport default App;\n","import axios from 'axios';\n\n/**\n * 发送 get 请求\n * @param {*} url\n * @param {*} data\n */\nexport function get(url, data) {\n  return axios\n    .get(url, data)\n    .then(res => res.data)\n    .then(data => {\n      console.log(data);\n      return data;\n    });\n}\n\n/**\n * 发送 post 请求\n * @param {*} url\n * @param {*} data\n */\nexport function post(url, data) {\n  return axios\n    .post(url, data)\n    .then(res => res.data)\n    .then(data => {\n      console.log(data);\n      return data;\n    });\n}\n"],"sourceRoot":""}